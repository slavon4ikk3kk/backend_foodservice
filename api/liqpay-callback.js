// pages/api/check-payment.js

import LiqPay from 'liqpay';

export default async function handler(req, res) {
  // ‚õî –î–æ–∑–≤–æ–ª—è—î–º–æ –ª–∏—à–µ GET
  if (req.method !== 'GET') {
    return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ' });
  }

  const { order_id } = req.query;

  // ‚ùó –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å order_id
  if (!order_id) {
    return res.status(400).json({ error: '–ù–µ –ø–µ—Ä–µ–¥–∞–Ω–æ order_id' });
  }

  // üîê –û—Ç—Ä–∏–º—É—î–º–æ –∫–ª—é—á—ñ –∑ env
  const public_key = process.env.LIQPAY_PUBLIC_KEY;
  const private_key = process.env.LIQPAY_PRIVATE_KEY;

  if (!public_key || !private_key) {
    return res.status(500).json({ error: '–ù–µ –∑–∞–¥–∞–Ω–æ LiqPay –∫–ª—é—á—ñ —É .env' });
  }

  // üîÑ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è SDK
  const liqpay = new LiqPay(public_key, private_key);

  try {
    // üì° –ó–∞–ø–∏—Ç –¥–æ API LiqPay
    liqpay.api(
      'request',
      {
        action: 'status',
        version: '3',
        order_id,
      },
      function (json) {
        // üîé –ú–æ–∂–µ—à –ª–æ–≥—É–≤–∞—Ç–∏
        console.log('LiqPay status response:', json);

        // üì¶ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ JSON-–≤—ñ–¥–ø–æ–≤—ñ–¥—å
        res.status(200).json({
          status: json.status,
          amount: json.amount,
          currency: json.currency,
          err_description: json.err_description || null,
          order_id: json.order_id,
        });
      }
    );
  } catch (err) {
    console.error('LiqPay status error:', err);
    res.status(500).json({ error: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Ç—ñ –¥–æ LiqPay' });
  }
}
